name: Server Workflow
on:
    push:
        branches: [main]
    workflow_dispatch:
jobs:
    test:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./server
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Install NodeJs
              uses: actions/setup-node@v5
              with:
                  node-version: "22.x"
            - name: Print Node Version
              run: node -v
            - name: Print NPM Version
              run: npm -v
            - name: Navigate to Server Directory
              run: |
                  pwd
                  ls -la
            - name: Install Dependencies
              run: npm install
            # - name: Run Tests
            #   run: npm test
            # - name: Run script to get coverage
            #   run: npm run test:coverage
    misc:
        needs: "test"
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./server
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Install NodeJs
              uses: actions/setup-node@v5
            - name: Print github context
              run: echo "${{ toJson(github) }}"

    misc2:
        needs: "test"
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./server
        steps:
            - name: Print job context
              run: echo "${{ toJson(job) }}"
            - name: Print steps context
              run: echo "${{ toJson(steps)}}"
            - name: Print secrets context
              run: echo "${{ toJson(secrets)}}"

    level3:
        needs: ["misc", "misc2"]
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./server
        steps:
            - name: Print env context
              run: echo "${{ toJson(env) }}"
            - name: Print vars context
              run: echo "${{ toJson(vars) }}"
